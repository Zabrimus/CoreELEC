name: Build Image Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Delete Packages
        run: |
          sudo apt-get -y remove --purge adoptopenjdk-11-hotspot adoptopenjdk-8-hotspot adwaita-icon-theme apache2 aspnetcore-runtime-3.1 \
                      aspnetcore-runtime-5.0 aspnetcore-runtime-6.0 aspnetcore-targeting-pack-3.1 aspnetcore-targeting-pack-5.0 \
                      aspnetcore-targeting-pack-6.0 clang-10 clang-11 clang-12 clang-format-10 clang-format-11 clang-format-12 \
                      dotnet-apphost-pack-3.1 dotnet-apphost-pack-5.0 dotnet-apphost-pack-6.0 dotnet-host dotnet-hostfxr-3.1 \
                      dotnet-hostfxr-5.0 dotnet-hostfxr-6.0 dotnet-runtime-3.1 dotnet-runtime-5.0 dotnet-runtime-6.0 \
                      dotnet-runtime-deps-3.1 dotnet-runtime-deps-5.0 dotnet-runtime-deps-6.0 dotnet-sdk-3.1 dotnet-sdk-5.0 \
                      dotnet-sdk-6.0 dotnet-targeting-pack-3.1 dotnet-targeting-pack-5.0 dotnet-targeting-pack-6.0 \
                      esl-erlang firebird3.0-common firebird3.0-common-doc g++ g++-9  gcc-11-base gcc-9 gcc-9-base \
                      gfortran gfortran-10 gfortran-9 imagemagick imagemagick-6-common imagemagick-6.q16 \
                      `dpkg -l | grep libmono | awk '{ print $2 }' | xargs` `dpkg -l | grep mongodb | awk '{ print $2 }' | xargs` \
                      `dpkg -l | grep mono | awk '{ print $2 }' | xargs` `dpkg -l | grep mysql | awk '{ print $2 }' | xargs` \
                      `dpkg -l | grep php | awk '{ print $2 }' | xargs` `dpkg -l | grep postgresql | awk '{ print $2 }' | xargs` \
                      r-base r-base-dev rake `dpkg -l | grep ruby | awk '{ print $2 }' | xargs`  \
                      `dpkg -l | grep llvm | awk '{ print $2 }' | xargs` `dpkg -l | grep mssql | awk '{ print $2 }' | xargs` \
                      subversion `dpkg -l | grep tcl | awk '{ print $2 }' | xargs` tex-common tk tk8.6 \
                      `dpkg -l | grep fonts- | awk '{ print $2 }' | xargs`
          
          
          sudo apt-get -y autoremove

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          swap-size-mb: 12288
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Show installed packages
        run: |
          dpkg -l

      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        with:
          path: |
            ./sources
          key: cache-19.4-Matrix-VDR

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install build-essential coreutils squashfuse git curl xfonts-utils xsltproc default-jre \
                               libxml-parser-perl libjson-perl libncurses5-dev bc gawk wget zip zstd libparse-yapp-perl \
                                gperf lzop unzip patchutils cpio
          sudo apt-get clean

      - name: Show free disk space before build
        run: |
          free
          df -h

      - name: Branch name
        id: branch_name
        run: |
            echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
            echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
            echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Start build
        run: |
          ./build-local.sh -x -e
          mv target/CoreELEC-Amlogic-ng.arm-*-Generic.img.gz target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}-Generic.img.gz
          mv target/CoreELEC-Amlogic-ng.arm-*-Generic.img.gz.sha256 target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}-Generic.img.gz.sha256
          mv target/CoreELEC-Amlogic-ng.arm-*.tar target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}.tar
          mv target/CoreELEC-Amlogic-ng.arm-*.tar.sha256 target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}.tar.sha256
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Show free disk space after build
        run: |
          df -h
          ls -la
          ls -la target

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          files: |
            target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}-Generic.img.gz
            target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}-Generic.img.gz.sha256
            target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}.tar
            target/CoreELEC-Amlogic-ng.arm-${SOURCE_BRANCH}-${SOURCE_TAG}.tar.sha256
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
